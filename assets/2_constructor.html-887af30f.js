import{_ as n,p as s,q as a,a1 as e}from"./framework-5866ffd3.js";const t={},o=e(`<h1 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> Constructor</h1><h2 id="介紹-constructor" tabindex="-1"><a class="header-anchor" href="#介紹-constructor" aria-hidden="true">#</a> 介紹 Constructor</h2><p>中文名為 構造器，在 構成object實例時使用。 為 Method的一種，不過有兩個位置不同：</p><ol><li>Method名稱 與 class名保持一致。</li><li>沒有 returnType</li></ol><h2 id="實例" tabindex="-1"><a class="header-anchor" href="#實例" aria-hidden="true">#</a> 實例</h2><p>當我們寫好一個class的時候，會在 main 建立這個class的變量，而這個變量就叫<strong>實例</strong>，建立就是<strong>構造</strong>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Student</span> std1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;Anson&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>new 是指明變量的一個 object</li><li>Student(&quot;Anson&quot;, 1, 1) 其實是一個 構成object實例 的 Method， 也就是 Constructor</li></ul><h2 id="overloarging" tabindex="-1"><a class="header-anchor" href="#overloarging" aria-hidden="true">#</a> overloarging</h2><p>容許 用一種以上的方法 去 構成object實例，就是 overloarging。 在自己的class上，有兩個或以上的Constructor, 就是 overloarging。</p><p>例子：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> s<span class="token punctuation">{</span>
    <span class="token comment">// Data member</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> sex<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> year<span class="token punctuation">;</span>

    <span class="token comment">// Constructor</span>
    <span class="token keyword">public</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setYear</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> sex<span class="token punctuation">,</span> <span class="token keyword">int</span> year<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setSex</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setYear</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// method 的 setter getter 不寫了，我懶。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),c=[o];function p(i,l){return s(),a("div",null,c)}const r=n(t,[["render",p],["__file","2_constructor.html.vue"]]);export{r as default};
