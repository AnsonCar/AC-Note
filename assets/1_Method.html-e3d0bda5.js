import{_ as n,p as s,q as a,a1 as e}from"./framework-5866ffd3.js";const t={},o=e(`<h1 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> Method</h1><h2 id="介紹method" tabindex="-1"><a class="header-anchor" href="#介紹method" aria-hidden="true">#</a> 介紹Method</h2><p>我們先看看這個代數例子</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>設f(x) = x + 1

如果 x = 10， 
則 f(10) = 10 + 1 
= 11
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，上面例子 設定了 <strong>f(x)</strong> 的<strong>公式</strong>， 其中要求 要引入一個 <strong>x</strong>的參數， 最後<strong>送回 x + 1</strong> 的 答案。</p><p>同樣，計算機 (電腦) 一開始 是為了 計數的。 為了方便計數，電腦也需要寫一些 代數公式。 <strong>那就是 Method / function</strong></p><p>我們再將上述例子 用java method寫一次</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span>
    retrun x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，上面例子 設定了 <strong>f(x)</strong> 的 <strong>Method</strong>， 其中要求 要引入一個 <strong>x</strong>的參數， 最後<strong>送回 x + 1</strong> 的 答案。</p><h2 id="原來是-作用域" tabindex="-1"><a class="header-anchor" href="#原來是-作用域" aria-hidden="true">#</a> 原來是 作用域</h2><p>在一般的情況下，class, Method都有自己一個 <strong>作用域( 這個大括號 { } )</strong> ，可以看作一個小世界， 如果 <strong>外面的變量</strong> 想進入這個小世界，只有以代數形式 代入 小世界之中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// print -&gt; 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>而在class的情況下，class自已的小世界，可以讓 DataMembers 可以自由進入 Method內。 不如，class 的 Method 因為 作用域，所以自己內部的資料不可以走出 { }</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> s<span class="token punctuation">{</span> <span class="token comment">//一個大作域</span>
    <span class="token comment">// Data Member</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> a<span class="token punctuation">;</span>

    <span class="token comment">// Method</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//作用域</span>
        retrun x <span class="token operator">+</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>可能你會有點困惑，看得多自然明 (生:wtf?)</p></blockquote><p>順便補充，為什麼我們有時在class會使用 <code>this</code>這個keyword (POP與OOP曾說明過)。 因為平時我們 setter 引入代數時，代數會跟 DataMembers 同名。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> s<span class="token punctuation">{</span>
    <span class="token comment">// Data Member</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> year<span class="token punctuation">;</span>
    <span class="token comment">// Method</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setYear</span><span class="token punctuation">(</span><span class="token keyword">int</span> year<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        year <span class="token operator">=</span> year<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>這個例子，因為 setYear() 的作用域，不知道外面class有一個Data Member都叫year， 所以 setYear() 不會改變外面year的值。</p><p>該如何做才能 改變外面year的值? 就是使用 <code>this</code> 指明我自己 class 的 year，不是引入的代數year。</p><h2 id="return-type" tabindex="-1"><a class="header-anchor" href="#return-type" aria-hidden="true">#</a> return Type</h2><p>retype type 其實是 Datatype。 同上，都是因為作用域，平時 method的內容不會有人訪問到，所以我只可以吧我想送出的值 寫明 我要送出去，就像 寫好一封信，然後送出去一樣。 而我們要做的是，寫明 我們 去出去 的 是什麼類型的信(書信，政府文件 之類)。</p>`,21),p=[o];function c(i,l){return s(),a("div",null,p)}const d=n(t,[["render",c],["__file","1_Method.html.vue"]]);export{d as default};
