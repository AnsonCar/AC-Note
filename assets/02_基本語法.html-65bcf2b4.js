import{_ as n,p as s,q as a,a1 as p}from"./framework-5866ffd3.js";const e={},t=p(`<h1 id="基礎語法" tabindex="-1"><a class="header-anchor" href="#基礎語法" aria-hidden="true">#</a> 基礎語法</h1><blockquote><p>所有語言都有共通點， 輸出輸入，條件控制，不斷循環。</p></blockquote><h2 id="輸入-輸出" tabindex="-1"><a class="header-anchor" href="#輸入-輸出" aria-hidden="true">#</a> 輸入/輸出</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 輸入</span>
Name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;What is your name.&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hi, Anson&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Hi, </span><span class="token interpolation"><span class="token punctuation">{</span>Name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hi, {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hi, %s&quot;</span> <span class="token operator">%</span>Name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="條件控制-if-else" tabindex="-1"><a class="header-anchor" href="#條件控制-if-else" aria-hidden="true">#</a> 條件控制 if-else</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> 條件 <span class="token punctuation">:</span>
    行動
<span class="token keyword">elif</span> 條件<span class="token punctuation">:</span>
    行動
<span class="token keyword">else</span><span class="token punctuation">:</span>
    行動
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="循環控制-while-for" tabindex="-1"><a class="header-anchor" href="#循環控制-while-for" aria-hidden="true">#</a> 循環控制 while for</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">while</span> 條件<span class="token punctuation">:</span>
    行動

<span class="token keyword">for</span> 代數 <span class="token keyword">in</span> 可迭代物件<span class="token punctuation">:</span>
    行動
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三元運算" tabindex="-1"><a class="header-anchor" href="#三元運算" aria-hidden="true">#</a> 三元運算</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>為真時 <span class="token keyword">if</span> 條件 <span class="token keyword">else</span> 為假時
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="推導式" tabindex="-1"><a class="header-anchor" href="#推導式" aria-hidden="true">#</a> 推導式</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">[</span>代數 <span class="token keyword">for</span> 代數 <span class="token keyword">in</span> 可迭代物件<span class="token punctuation">]</span>

<span class="token punctuation">[</span>為真時 <span class="token keyword">if</span> 條件 <span class="token keyword">else</span> 為假時 <span class="token keyword">for</span> 代數 <span class="token keyword">in</span> 可迭代物件<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子：</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 定義一個function (method) 計利率</span>
<span class="token comment"># 引入兩個數，本金 及 年期</span>
<span class="token comment"># 計算利潤 公式: 本金 /  (利率 ** 年期)</span>
<span class="token comment"># 寫入兩位小數 （唔加會內存洩漏小數位出錯）</span>
<span class="token comment"># 每五年加一次 十元</span>

<span class="token comment"># 簡易版</span>
Easy_src <span class="token operator">=</span> <span class="token number">1000</span> <span class="token comment"># 本金</span>
Easy_num <span class="token operator">=</span> <span class="token number">12</span> <span class="token comment"># 年期</span>
Easy_sum <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> year <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> Easy_num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    Easy_sum <span class="token operator">+=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>Easy_src <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1.05</span> <span class="token operator">**</span> year<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> year <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        Easy_src <span class="token operator">+=</span> <span class="token number">10</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        Easy_src <span class="token operator">+=</span> <span class="token number">0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>Easy_sum<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 一般版</span>
<span class="token keyword">def</span> <span class="token function">Count</span><span class="token punctuation">(</span>src<span class="token punctuation">:</span><span class="token builtin">float</span><span class="token punctuation">,</span> num<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> year <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">sum</span> <span class="token operator">+=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>src <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>year <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1.05</span> <span class="token operator">**</span> year<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token comment"># src += 10 if year % 5 == 0 else 0</span>
    <span class="token keyword">return</span> <span class="token builtin">round</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Count<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 超級簡化</span>
<span class="token keyword">def</span> <span class="token function">Count_S</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">round</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">sum</span> <span class="token keyword">for</span> <span class="token builtin">sum</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">round</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span>src <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>year <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1.05</span> <span class="token operator">**</span> year<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> year <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Count_S<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[t];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","02_基本語法.html.vue"]]);export{r as default};
